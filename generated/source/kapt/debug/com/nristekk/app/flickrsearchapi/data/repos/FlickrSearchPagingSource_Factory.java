// Generated by Dagger (https://dagger.dev).
package com.nristekk.app.flickrsearchapi.data.repos;

import com.nristekk.app.flickrsearchapi.api.FlickrSearchApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FlickrSearchPagingSource_Factory implements Factory<FlickrSearchPagingSource> {
  private final Provider<FlickrSearchApi> flickrSearchApiProvider;

  private final Provider<String> queryProvider;

  public FlickrSearchPagingSource_Factory(Provider<FlickrSearchApi> flickrSearchApiProvider,
      Provider<String> queryProvider) {
    this.flickrSearchApiProvider = flickrSearchApiProvider;
    this.queryProvider = queryProvider;
  }

  @Override
  public FlickrSearchPagingSource get() {
    return newInstance(flickrSearchApiProvider.get(), queryProvider.get());
  }

  public static FlickrSearchPagingSource_Factory create(
      Provider<FlickrSearchApi> flickrSearchApiProvider, Provider<String> queryProvider) {
    return new FlickrSearchPagingSource_Factory(flickrSearchApiProvider, queryProvider);
  }

  public static FlickrSearchPagingSource newInstance(FlickrSearchApi flickrSearchApi,
      String query) {
    return new FlickrSearchPagingSource(flickrSearchApi, query);
  }
}
